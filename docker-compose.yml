version: '3.8'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: /bin/sh "utils/run_local.sh"
    volumes:
      - ./:/usr/src/app
    links:
     - postgres
    ports:
     - "80:80"
    environment:
      - DEBUG=True
      - ENVIRONMENT=${ENVIRONMENT}
      - DJANGO_SETTINGS_MODULE=gidsey.settings.dev
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - BASE_URL=http://localhost
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  devtools:
    # DevTools is mainly for running fab commands during local development. It is NOT used in production.
    # e.g. download production database, download production media.
    build:
      context: .
      dockerfile: ./Dockerfile.devtools
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_URL_PRODUCTION=${DATABASE_URL_PRODUCTION}
      - DATABASE_URL_STAGING=${DATABASE_URL_STAGING}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - AWS_BUCKET_NAME=${AWS_BUCKET_AND_FOLDER_NAME}
    volumes:
      - .:/app
    depends_on:
      - postgres
    # Use profiles option so that devtools container is NOT started under the normal docker-compose up command.
    profiles: ["devtools"]

volumes:
  postgres_data: {}
